import{D as S,g as l}from"./DhFvSSa1.js";const M=S("dateStore",()=>{const d=l({date:new Date});return{init:()=>{d.date=new Date},setDate:t=>{d.date=t},getDate:()=>d.date,getFilterFormat:t=>{const c=JSON.stringify(t.getFullYear()).slice(2,4),u=(t.getMonth()+1).toString().length===1?`0${t.getMonth()+1}`:t.getMonth()+1,e=t.getDate().toString().length===1?`0${t.getDate()}`:t.getDate();return u+"/"+e+"/"+c},getLeagueFormat:(t,c=!0)=>{const u=t.getFullYear(),e=(t.getMonth()+1).toString().length===1?`0${t.getMonth()+1}`:t.getMonth()+1,n=t.getDate().toString().length===1?`0${t.getDate()}`:t.getDate(),g=t.getDay(),r=["SUN","MON","TUE","WED","THU","FRI","SAT"];return e+"/"+n+"/"+u+", "+r[g]+(c?` // ${t.toString()}`:"")}}}),y=S("filterStore",()=>{const d=l({isToggled:!1,sortLogic:e=>e}),a=l({isToggled:!1,sortLogic:e=>e.sort((g,r)=>g.date.getTime()-r.date.getTime()).map((g,r,s)=>(g.hasLeagueTag=r===0||s[r-1].lg_name!==g.lg_name,g)),sortLogicBasic:e=>{e.map(s=>{s.hasLeagueTag=!1});const n=e.reduce((s,i)=>(s[i.lg_name]||(s[i.lg_name]=[]),s[i.lg_name].push(i),s),{}),g=Object.entries(n).map(s=>{const[i,F]=s,L=F;return L.sort((T,h)=>T.date.getTime()-h.date.getTime()),L.forEach((T,h)=>{T.hasLeagueTag=h===0}),{lg_name:i,matches:L}}),r=[];return g.sort((s,i)=>s.matches[0].date.getTime()-i.matches[0].date.getTime()).map(s=>{r.push(...s.matches)}),r}}),D=l({sortLogic:(e,n)=>e.filter(r=>r.date.getFullYear()===n.getFullYear()&&r.date.getMonth()===n.getMonth()&&r.date.getDate()===n.getDate())}),o=l({list:[],sortedList:[]});return{init:()=>{d.isToggled=!1,a.isToggled=!1,o.list=[],o.sortedList=[]},toggle:()=>(a.isToggled=!a.isToggled,a.isToggled),sortList:(e,n)=>{o.list=e;const g=D.sortLogic(e,n);return o.sortedList=g,d.isToggled&&(o.sortedList=d.sortLogic(o.sortedList)),a.isToggled?o.sortedList=a.sortLogic(o.sortedList):o.sortedList=a.sortLogicBasic(o.sortedList),o.sortedList},getSortedList:()=>o.sortedList,getTimeIsToggled:()=>a.isToggled}});export{y as a,M as u};
