import{B as y,h as T}from"./AXEMsDeV.js";const Y=y("dateStore",()=>{const L=T({date:new Date});return{init:()=>{L.date=new Date},setDate:r=>{L.date=r},getDate:()=>L.date,getFilterFormat:r=>{const D=JSON.stringify(r.getFullYear()).slice(2,4),f=(r.getMonth()+1).toString().length===1?`0${r.getMonth()+1}`:r.getMonth()+1,o=r.getDate().toString().length===1?`0${r.getDate()}`:r.getDate();return f+"/"+o+"/"+D},getLeagueFormat:(r,D=!0)=>{const f=r.getFullYear(),o=(r.getMonth()+1).toString().length===1?`0${r.getMonth()+1}`:r.getMonth()+1,t=r.getDate().toString().length===1?`0${r.getDate()}`:r.getDate(),e=r.getDay(),a=["SUN","MON","TUE","WED","THU","FRI","SAT"];return o+"/"+t+"/"+f+", "+a[e]+(D?` // ${r.toString()}`:"")}}}),B=y("filterStore",()=>{const L=T({isToggled:!1,sortLogic:(o,t)=>o}),d=T({isToggled:!1,sortLogic:(o,t)=>{const e=(t==null?void 0:t.date)??(g=>g.date),a=(t==null?void 0:t.league)??(g=>g.lg_name);return o.sort((g,l)=>e(g).getTime()-e(l).getTime()).map((g,l,s)=>(g.hasLeagueTag=l===0||a(s[l-1])!==a(g),g))},sortLogicBasic:(o,t)=>{const e=(t==null?void 0:t.date)??(s=>s.date),a=(t==null?void 0:t.league)??(s=>s.lg_name);o.map(s=>{s.hasLeagueTag=!1});const u=o.reduce((s,n)=>(s[a(n)]||(s[a(n)]=[]),s[a(n)].push(n),s),{}),g=Object.entries(u).map(s=>{const[n,M]=s,c=M;return c.sort((S,p)=>e(S).getTime()-e(p).getTime()),c.forEach((S,p)=>{S.hasLeagueTag=p===0}),{lg_name:n,matches:c}}),l=[];return g.sort((s,n)=>e(s.matches[0]).getTime()-e(n.matches[0]).getTime()).map(s=>{l.push(...s.matches)}),l}}),F=T({sortLogic:(o,t,e)=>{const a=(e==null?void 0:e.isWholeDate)??!1,u=(e==null?void 0:e.isResult)??!1,g=(e==null?void 0:e.date)??(n=>n.date),l=new Date(Date.now());return o.filter(n=>g(n).getFullYear()===t.getFullYear()&&g(n).getMonth()===t.getMonth()&&g(n).getDate()===t.getDate()).filter(n=>a?!0:u?g(n).getTime()>l:g(n).getTime()<l)}}),i=T({list:[],sortedList:[]});return{init:()=>{L.isToggled=!1,d.isToggled=!1,i.list=[],i.sortedList=[]},toggle:()=>(d.isToggled=!d.isToggled,d.isToggled),sortList:(o,t,e)=>{i.list=o;const a=F.sortLogic(o,t,e);return i.sortedList=a,L.isToggled&&(i.sortedList=L.sortLogic(i.sortedList,e)),d.isToggled?i.sortedList=d.sortLogic(i.sortedList,e):i.sortedList=d.sortLogicBasic(i.sortedList,e),console.log("opt.sortedList: ",i.sortedList),i.sortedList},getSortedList:()=>i.sortedList,getTimeIsToggled:()=>d.isToggled}});export{Y as a,B as u};
